#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<stdio.h>

void Swap(int* a, int* b)
{
    int tmp;
    tmp = *a;
    *a = *b;
    *b = tmp;
}

void  Quick_Sort(int arr[],int l,int r)
{
    //递归停止！！！！
    if (l >= r) return;//ending递归结束！  虽有子区域排序完毕
    int x = arr[l+r>>1];
    int i = l - 1, j = r + 1;;//小越界，配合do while卡位置;  //注意i，j l  r  的关系和作用！！！ lr不能变 后面递归卡子范围的
    while (i < j)
    {
        do i++; while (arr[i] < x);//  核心思想 与二分有点不一样！  要求：一个迭代后 驻点 左边 都《=x  驻点 右边 都》=x 所以do while的（）里判断是<or>, ！！！分别卡出为(左边的》=和 和右边的《=   再交换)！！！
        do j--; while (arr[j] > x);
        
        if(i<j) Swap(arr + i, arr + j);//注意这个if别丢 不然瞎交换了

        
    }
    Quick_Sort(arr,l,i-1);//递归 分治
    Quick_Sort(arr,j+1,r );


    
}

int main()
{
    int n,i,l,r;
    int arr[100000];
    //录入
    scanf("%d",&n);
    for (i = 0; i < n; i++) scanf("%d", arr + i);
    
    l = 0;
    r = n - 1;
    Quick_Sort(arr,l,r);


    //输出
    for (i = 0; i < n; i++) printf("%d ",arr[i]);
    


    return 0;
}
